{"version":3,"sources":["components/searchBox.js","constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/header.js","components/footer.js","components/rating.js","components/product.js","components/loader.js","components/message.js","components/paginate.js","constants/productConstants.js","actions/productActions.js","components/productCarousel.js","constants/cartConstants.js","actions/orderActions.js","screens/homeScreen.js","screens/productScreen.js","actions/cartActions.js","screens/cartScreen.js","components/formContainer.js","screens/loginScreen.js","screens/registerScreen.js","screens/profileScreen.js","screens/userListScreen.js","screens/userEditScreen.js","components/checkoutSteps.js","screens/shippingScreen.js","screens/paymentScreen.js","screens/placeOrderScreen.js","screens/orderScreen.js","components/exportExcelFile.js","components/productTable.js","components/importExcelFile.js","screens/productListScreen.js","screens/productEditScreen.js","screens/orderListScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","type","name","onChange","target","value","className","Button","variant","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","detail","message","Header","useSelector","state","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","is_admin","Footer","Row","Col","Rating","text","color","style","Product","product","Card","_id","Img","src","image","height","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","margin","display","Message","children","Alert","Paginate","pages","page","isAdmin","split","console","log","Pagination","Array","keys","map","x","active","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","listProductDetails","ProductCarousel","productTopRated","error","loading","products","useEffect","Carousel","pause","Image","alt","fluid","Caption","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","listOrders","HomeScreen","productList","orderList","orders","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","loadingProductReview","errorProductReview","successProductReview","success","params","ListGroup","description","countInStock","xs","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","Number","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","required","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","order","totalPrice","isPaid","paidAt","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","window","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIs_Admin","userUpdate","errorUpdate","loadingUpdate","successUpdate","updateUser","Check","checked","label","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","PlaceOrderScreen","orderCreate","itemsPrice","index","createOrder","orderItems","OrderScreen","orderId","orderDetails","orderDeliver","loadingDeliver","successDeliver","isDelivered","deliveredAt","deliverOrder","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ExportReact","dataSet","element","ProductTable","deleteProduct","category","brand","ExcelReader","props","fileHandler","event","fileObj","files","ExcelRenderer","err","resp","setState","cols","rows","this","bind","columns","tableClassName","tableHeaderRowClass","Component","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","forEach","obj","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","orderPay","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.453edb80.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            >\r\n            </Form.Control>\r\n            <Button\r\n            type='submit'\r\n            variant='outline-success'\r\n            className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/users/login',\r\n            {'username' : email, 'password' : password},\r\n                config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) =>  {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/users/register/',\r\n            {'name' : name, 'email' : email, 'password' : password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/users/profile/update`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/users`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/users/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/users/update/${user._id}`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Navbar, Nav, Container, Row, NavDropdown} from \"react-bootstrap\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from \"./searchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Header() {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand href=\"/\">BShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <SearchBox/>\r\n                    <Nav className=\"ml-auto\">\r\n                        <LinkContainer to=\"/cart\">\r\n                            <Nav.Link><i className=\"fas fa-shopping-cart\"/>Cart</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                        { userInfo ? (\r\n                            <NavDropdown id='username' title={userInfo.name}>\r\n                                <LinkContainer to='/profile'>\r\n                                    < NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <NavDropdown.Item onClick={logoutHandler}>Log out</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                            <LinkContainer to=\"/login\">\r\n                                <Nav.Link><i className=\"fas fa-user\"/>Login</Nav.Link>\r\n                            </LinkContainer>\r\n                        )}\r\n\r\n                        {userInfo && userInfo.is_admin && (\r\n                            <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                            </NavDropdown>\r\n                        )}\r\n\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; BeautyShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}){\r\n    return(\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} style={{height: \"240px\"}}/>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n\r\n                    </div>\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    {product.price}₴\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default Product","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader(){\r\n    return(\r\n        <Spinner animation=\"border\"\r\n                 role=\"status\"\r\n                style={{\r\n                    height: '100px',\r\n                    width: '100px',\r\n                    margin: 'auto',\r\n                    display: 'block'\r\n                }}>\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nfunction Message({ variant, children }){\r\n    return(\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin=false}){\r\n\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    console.log('KEYWORD:', keyword)\r\n\r\n    return(\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {\r\n                    [...Array(pages).keys()].map((x) => (\r\n                        <LinkContainer\r\n                            key={x + 1}\r\n                        to={!isAdmin ?\r\n                            `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                        }\r\n                        >\r\n                            <Pagination.Item active={x + 1 === page}>\r\n                                {x + 1}\r\n                            </Pagination.Item>\r\n\r\n                        </LinkContainer>\r\n                    ))\r\n                }\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\nexport const PRODUCT_TOP_RESET = 'PRODUCT_TOP_RESET'","import {PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_SUCCESS,\r\n        PRODUCT_LIST_FAIL,\r\n\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS,\r\n        PRODUCT_DETAILS_FAIL,\r\n\r\n        PRODUCT_DELETE_REQUEST,\r\n        PRODUCT_DELETE_SUCCESS,\r\n        PRODUCT_DELETE_FAIL,\r\n\r\n        PRODUCT_CREATE_REQUEST,\r\n        PRODUCT_CREATE_SUCCESS,\r\n        PRODUCT_CREATE_FAIL,\r\n\r\n        PRODUCT_UPDATE_REQUEST,\r\n        PRODUCT_UPDATE_SUCCESS,\r\n        PRODUCT_UPDATE_FAIL,\r\n\r\n        PRODUCT_CREATE_REVIEW_REQUEST,\r\n        PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n        PRODUCT_TOP_REQUEST,\r\n        PRODUCT_TOP_SUCCESS,\r\n        PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\nimport {ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS} from \"../constants/orderConstants\";\r\n\r\nexport const listProducts  = (keyword = '') => async (dispatch)  => {\r\n    try{\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const { data } = await axios.get(`/products/${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts  = () => async (dispatch)  => {\r\n    try{\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const { data } = await axios.get(`/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails  = (id) => async (dispatch)  => {\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/products/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './loader';\r\nimport Message from './message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n            : error\r\n                ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Carousel pause='hover' className='bg-dark'>\r\n                        {products.map(product => (\r\n                            <Carousel.Item key={product._id}>\r\n                                <Link to={`/product/${product._id}`}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                    <Carousel.Caption className='carousel.caption'>\r\n                                        <h4>{product.name} ({product.price}₴)</h4>\r\n                                    </Carousel.Caption>\r\n                                </Link>\r\n                            </Carousel.Item>\r\n                        ))}\r\n                    </Carousel>\r\n                )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","import axios from \"axios\";\r\nimport{\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from \"../constants/orderConstants\";\r\n\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders/myorders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Product from \"../components/product\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport Paginate from \"../components/paginate\";\r\nimport {listProducts} from \"../actions/productActions\";\r\nimport ProductCarousel from \"../components/productCarousel\";\r\nimport {listOrders} from \"../actions/orderActions\";\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading: loadingOrders,  error: errorOrders, orders } = orderList\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n\r\n        dispatch(listProducts(keyword))\r\n        dispatch(listOrders())\r\n\r\n    }, [dispatch, keyword])\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product}/>\r\n                                </Col>\r\n                            )\r\n                        )}\r\n                    </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword}/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HomeScreen","import React, {useEffect, useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form} from \"react-bootstrap\";\r\nimport Rating from \"../components/rating\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport { listProductDetails, createProductReview } from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductScreen({ match, history }){\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Link to=\"/\" className=\"btn btn-light my-3\">Go Back</Link>\r\n\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid/>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#f8e825\"}/>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Price: {product.price}₴\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Description: {product.description}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price:</Col>\r\n                                                <Col>\r\n                                                    <strong>{product.price}₴</strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Status:</Col>\r\n                                                <Col>\r\n                                                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Qty</Col>\r\n                                                    <Col xs='auto' className='my-1'>\r\n                                                        <Form.Control\r\n                                                        as='select'\r\n                                                        value={qty}\r\n                                                        onChange = {(e) => setQty(e.target.value)}\r\n                                                        >\r\n                                                            {\r\n                                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className=\"btn-block\"\r\n                                                    type=\"button\"\r\n                                                    disabled={product.countInStock === 0}>Add to cart</Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h4>Reviews</h4>\r\n                                {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                <ListGroup variant='flush'>\r\n                                    {product.reviews.map((review) => (\r\n                                        <ListGroup.Item key={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} color='#f8e825' />\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <h4>Write a review</h4>\r\n\r\n                                        {loadingProductReview && <Loader />}\r\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                        {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={rating}\r\n                                                        onChange={(e) => setRating(e.target.value)}\r\n                                                    >\r\n                                                        <option value=''>Select...</option>\r\n                                                        <option value='1'>1 - Poor</option>\r\n                                                        <option value='2'>2 - Fair</option>\r\n                                                        <option value='3'>3 - Good</option>\r\n                                                        <option value='4'>4 - Very Good</option>\r\n                                                        <option value='5'>5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label>Review</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        row='5'\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                        />\r\n                                                </Form.Group>\r\n\r\n                                                <Button\r\n                                                    disabled={loadingProductReview}\r\n                                                    type='submit'\r\n                                                    variant='primary'\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n\r\n                                            </Form>\r\n                                        ) : (\r\n                                            <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen","import axios from \"axios\";\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty: qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from \"react-bootstrap\";\r\nimport Message from \"../components/message\"\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\n\r\nfunction CartScreen({ match, location, history }){\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return(\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                { cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go back</Link>\r\n                    </Message>\r\n                ) :\r\n                <ListGroup variant='flush'>\r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>\r\n                                        {item.name}\r\n                                    </Link>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    {item.price}₴\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Form.Control\r\n                                        as='select'\r\n                                        value={item.qty}\r\n                                        onChange = {(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                    >\r\n                                        {\r\n                                            [...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))\r\n                                        }\r\n\r\n                                    </Form.Control>\r\n                                </Col>\r\n\r\n                                <Col md={1}>\r\n                                    <Button\r\n                                        type='button'\r\n                                        variant='light'\r\n                                        onClick={() => removeFromCartHandler(item.product)}\r\n                                    >\r\n                                        <i className='fas fa-trash'/>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n\r\n                    ))}\r\n                </ListGroup>\r\n                }\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}₴\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nfunction LoginScreen({location, history}){\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                    Register\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nfunction RegisterScreen({location, history}){\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account? <Link\r\n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                    Sign In\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport {getUserDetails, register, updateUserProfile} from \"../actions/userActions\";\r\nimport {userUpdateProfileReducer} from \"../reducers/userReducers\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id ){\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User profile</h2>\r\n\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    {loading && <Loader />}\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type='email'\r\n                                placeholder='Enter Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Enter Password'\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Confirm Password'\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th/>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}₴</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                                )\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nfunction UserListScreen({ history }){\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading,  error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.is_admin){\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this user?')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.is_admin ? (\r\n                                        <i className='fas fa-check' style={{color: 'green'}}/>\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}</td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'/>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                            <i className='fas fa-trash'/>\r\n                                        </Button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nfunction UserEditScreen({match, history}){\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [is_admin, setIs_Admin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIs_Admin(user.is_admin)\r\n            }\r\n        }\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id: user._id, name, email, is_admin}))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    checked={is_admin}\r\n                                    label='Is Admin'\r\n                                    onChange={(e) => setIs_Admin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default UserEditScreen","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nfunction ShippingScreen({ history }){\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\n\r\nfunction PaymentScreen({ history }){\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('С.O.D.')\r\n\r\n    if(!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return(\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form as='legend'>Select Method</Form>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='C.O.D. or Credit Card'\r\n                            id='C.O.D.'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }){\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch()\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n\r\n    cart.totalPrice =  cart.itemsPrice\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {'   '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'   '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order items</h2>\r\n                            {cart.cartItems.length === 0 ? (<Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> ): (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x {item.price}₴ = {(item.qty * item.price).toFixed(2)}₴\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                        ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Items:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {cart.itemsPrice}₴\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>{cart.totalPrice}₴</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport { getOrderDetails, deliverOrder } from \"../actions/orderActions\";\r\nimport { ORDER_DELIVER_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({ match, history }){\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n        if(!order || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        }\r\n\r\n    }, [dispatch,  order, orderId, successDeliver])\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return  loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) :\r\n        (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {'   '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'   '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered at {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order items</h2>\r\n                            {order.orderItems.length === 0 ? (<Message variant='info'>\r\n                                Order is empty\r\n                            </Message> ): (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x {item.price}₴ = {(item.qty * item.price).toFixed(2)}₴\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Items:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {order.itemsPrice}₴\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>{order.totalPrice}₴</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.is_admin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                type='button'\r\n                                className='btn btn-block'\r\n                                onClick={deliverHandler}\r\n                                >\r\n                                    Mark As Deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","import React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\n\r\nexport const ExportReact = ({dataSet}) => {\r\n    return (\r\n        <ExcelFile element={<Button variant=\"warning\">Export</Button>}>\r\n            <ExcelSheet data={dataSet} name=\"Products\">\r\n                <ExcelColumn label=\"_id\" value=\"_id\"/>\r\n                <ExcelColumn label=\"name\" value=\"name\"/>\r\n                <ExcelColumn label=\"price\" value=\"price\"/>\r\n                <ExcelColumn label=\"description\" value=\"description\"/>\r\n                <ExcelColumn label=\"category\" value=\"category\"/>\r\n                <ExcelColumn label=\"brand\" value=\"brand\"/>\r\n            </ExcelSheet>\r\n        </ExcelFile>\r\n    )\r\n}","import React from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport {deleteProduct} from \"../actions/productActions\";\r\n\r\nfunction ProductTable({products}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this product?')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {products.map(product => (\r\n                <tr key={product._id}>\r\n                    <td>{product._id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.price}₴</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.brand}</td>\r\n\r\n                    <td>\r\n                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                            <Button variant='light' className='btn-sm'>\r\n                                <i className='fas fa-edit'/>\r\n                            </Button>\r\n                        </LinkContainer>\r\n\r\n                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                            <i className='fas fa-trash'/>\r\n                        </Button>\r\n                    </td>\r\n\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default ProductTable","import React, { Component } from 'react';\r\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\r\n\r\nclass ExcelReader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rows: [],\r\n            cols: [],\r\n        }\r\n    }\r\n\r\n    fileHandler = (event) => {\r\n        let fileObj = event.target.files[0];\r\n\r\n        //just pass the fileObj as parameter\r\n        ExcelRenderer(fileObj, (err, resp) => {\r\n            if(err){\r\n                console.log(err);\r\n            }\r\n            else{\r\n                this.setState({\r\n                    cols: resp.cols,\r\n                    rows: resp.rows\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.fileHandler.bind(this)} style={{\"padding\":\"10px\"}} />\r\n                <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExcelReader;","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport Paginate from \"../components/paginate\";\r\nimport { listProducts, deleteProduct, createProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nimport { ExportReact } from \"../components/exportExcelFile\";\r\nimport ProductTable from \"../components/productTable\";\r\nimport ExcelReader from \"../components/importExcelFile\";\r\n\r\nfunction ProductListScreen({ history, match }){\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading,  error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete,  error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate,  error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if(!userInfo.is_admin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const data = []\r\n\r\n    products.forEach(product => {\r\n        const obj = {\r\n            _id: product._id,\r\n            name: product.name,\r\n            price: product.price,\r\n            description: product.description,\r\n            category: product.category,\r\n            brand: product.brand\r\n        }\r\n        data.push(obj)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'/> Create Product\r\n                    </Button>\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                        <ProductTable products={products}/>\r\n                            <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                            <Col className='text-left'>\r\n                                <ExportReact dataSet={data} />\r\n                            </Col>\r\n                                <ExcelReader />\r\n\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductEditScreen({match, history}){\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if(!product.name || product._id !== Number(productId)){\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n\r\n    }, [product, productId, dispatch, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try{\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/products/upload/', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch(error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(Number(e.target.value))}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n                                </Form.File>\r\n                                {uploading && <Loader/> }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(Number(e.target.value))}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\nfunction OrderListScreen({ history }){\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading,  error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.is_admin){\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL PRICE</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user && order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}₴</td>\r\n                                    <td>{order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}\r\n                                    </td>\r\n\r\n                                    <td>{order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderListScreen","import React from \"react\";\r\nimport {HashRouter as Router, Route} from \"react-router-dom\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\nimport HomeScreen from \"./screens/homeScreen\";\r\nimport ProductScreen from \"./screens/productScreen\";\r\nimport CartScreen from \"./screens/cartScreen\";\r\nimport LoginScreen from \"./screens/loginScreen\";\r\nimport RegisterScreen from \"./screens/registerScreen\";\r\nimport ProfileScreen from \"./screens/profileScreen\";\r\nimport UserListScreen from \"./screens/userListScreen\";\r\nimport UserEditScreen from \"./screens/userEditScreen\";\r\nimport ShippingScreen from \"./screens/shippingScreen\";\r\nimport PaymentScreen from \"./screens/paymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/placeOrderScreen\";\r\nimport OrderScreen from \"./screens/orderScreen\";\r\nimport ProductListScreen from \"./screens/productListScreen\";\r\nimport ProductEditScreen from \"./screens/productEditScreen\";\r\nimport OrderListScreen from \"./screens/orderListScreen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <Header/>\r\n        <main className=\"py-3\">\r\n            <Container>\r\n                <Route path=\"/\" component={HomeScreen} exact/>\r\n                <Route path=\"/login\" component={LoginScreen}/>\r\n                <Route path=\"/register\" component={RegisterScreen}/>\r\n                <Route path=\"/profile\" component={ProfileScreen}/>\r\n                <Route path=\"/shipping\" component={ShippingScreen}/>\r\n                <Route path=\"/payment\" component={PaymentScreen}/>\r\n                <Route path=\"/placeorder\" component={PlaceOrderScreen}/>\r\n                <Route path=\"/order/:id\" component={OrderScreen}/>\r\n                <Route path=\"/product/:id\" component={ProductScreen}/>\r\n                <Route path=\"/cart/:id?\" component={CartScreen}/>\r\n\r\n                <Route path=\"/admin/userlist\" component={UserListScreen}/>\r\n                <Route path=\"/admin/user/:id/edit\" component={UserEditScreen}/>\r\n\r\n                <Route path=\"/admin/productlist\" component={ProductListScreen}/>\r\n                <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen}/>\r\n\r\n                <Route path=\"/admin/orderlist\" component={OrderListScreen}/>\r\n            </Container>\r\n        </main>\r\n        <Footer/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n                            JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n                            JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n            composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_SUCCESS,\r\n        PRODUCT_LIST_FAIL,\r\n\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS,\r\n        PRODUCT_DETAILS_FAIL,\r\n\r\n        PRODUCT_DELETE_REQUEST,\r\n        PRODUCT_DELETE_SUCCESS,\r\n        PRODUCT_DELETE_FAIL,\r\n\r\n        PRODUCT_CREATE_REQUEST,\r\n        PRODUCT_CREATE_SUCCESS,\r\n        PRODUCT_CREATE_FAIL,\r\n        PRODUCT_CREATE_RESET,\r\n\r\n        PRODUCT_UPDATE_REQUEST,\r\n        PRODUCT_UPDATE_SUCCESS,\r\n        PRODUCT_UPDATE_FAIL,\r\n        PRODUCT_UPDATE_RESET,\r\n\r\n        PRODUCT_CREATE_REVIEW_REQUEST,\r\n        PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        PRODUCT_CREATE_REVIEW_FAIL,\r\n        PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n        PRODUCT_TOP_REQUEST,\r\n        PRODUCT_TOP_SUCCESS,\r\n        PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages,\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews: []} }, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = {product: {}}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case CART_CLEAR_ITEMS:\r\n            return{\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from \"../constants/userConstants\";\r\n\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {user: { } }, action) => {\r\n    switch (action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true,  userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = {users: [] }, action) => {\r\n    switch (action.type){\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false,  users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return {users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false,  success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user: {}}, action) => {\r\n    switch (action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false,  success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import{\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state={}, action) => {\r\n    switch (action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = {orders: []}, action) => {\r\n    switch (action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = {orders: []}, action) => {\r\n    switch (action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}