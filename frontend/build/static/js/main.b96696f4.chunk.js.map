{"version":3,"sources":["components/searchBox.js","constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/header.js","components/footer.js","components/rating.js","components/product.js","components/loader.js","components/message.js","components/paginate.js","constants/productConstants.js","actions/productActions.js","components/columnChart.js","components/productCarousel.js","constants/cartConstants.js","actions/orderActions.js","screens/homeScreen.js","screens/productScreen.js","actions/cartActions.js","screens/cartScreen.js","components/formContainer.js","screens/loginScreen.js","screens/registerScreen.js","screens/profileScreen.js","screens/userListScreen.js","screens/userEditScreen.js","components/checkoutSteps.js","screens/shippingScreen.js","screens/paymentScreen.js","screens/placeOrderScreen.js","screens/orderScreen.js","components/exportExcelFile.js","components/productTable.js","components/importExcelFile.js","screens/productListScreen.js","screens/productEditScreen.js","screens/orderListScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","type","name","onChange","target","value","className","Button","variant","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","detail","message","Header","useSelector","state","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","is_admin","Footer","Row","Col","Rating","text","color","style","Product","product","Card","_id","Img","src","image","height","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","margin","display","Message","children","Alert","Paginate","pages","page","isAdmin","split","console","log","Pagination","Array","keys","map","x","active","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","listProductDetails","DemoColumn","ProductCarousel","productTopRated","error","loading","products","useEffect","Carousel","pause","Image","alt","fluid","Caption","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","listOrders","HomeScreen","productList","orderList","orders","search","reduce","acc","category","order","orderItems","forEach","orderItem","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","loadingProductReview","errorProductReview","successProductReview","success","params","ListGroup","description","countInStock","xs","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","Number","removeFromCartHandler","removeFromCart","item","rounded","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","required","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","window","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIs_Admin","userUpdate","errorUpdate","loadingUpdate","successUpdate","updateUser","Check","checked","label","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","PlaceOrderScreen","orderCreate","itemsPrice","index","createOrder","OrderScreen","orderId","orderDetails","orderDeliver","loadingDeliver","successDeliver","isDelivered","deliveredAt","deliverOrder","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ExportReact","dataSet","element","ProductTable","deleteProduct","brand","ExcelReader","props","fileHandler","event","fileObj","files","ExcelRenderer","err","resp","setState","cols","rows","this","bind","columns","tableClassName","tableHeaderRowClass","Component","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","obj","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","orderPay","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b96696f4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            >\r\n            </Form.Control>\r\n            <Button\r\n            type='submit'\r\n            variant='outline-success'\r\n            className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/users/login',\r\n            {'username' : email, 'password' : password},\r\n                config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) =>  {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/users/register/',\r\n            {'name' : name, 'email' : email, 'password' : password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/users/profile/update`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/users`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/users/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/users/update/${user._id}`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Navbar, Nav, Container, Row, NavDropdown} from \"react-bootstrap\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from \"./searchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Header() {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand href=\"/\">BShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <SearchBox/>\r\n                    <Nav className=\"ml-auto\">\r\n                        <LinkContainer to=\"/cart\">\r\n                            <Nav.Link><i className=\"fas fa-shopping-cart\"/>Cart</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                        { userInfo ? (\r\n                            <NavDropdown id='username' title={userInfo.name}>\r\n                                <LinkContainer to='/profile'>\r\n                                    < NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <NavDropdown.Item onClick={logoutHandler}>Log out</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                            <LinkContainer to=\"/login\">\r\n                                <Nav.Link><i className=\"fas fa-user\"/>Login</Nav.Link>\r\n                            </LinkContainer>\r\n                        )}\r\n\r\n                        {userInfo && userInfo.is_admin && (\r\n                            <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                            </NavDropdown>\r\n                        )}\r\n\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; BeautyShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}){\r\n    return(\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} style={{height: \"240px\"}}/>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n\r\n                    </div>\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    {product.price}₴\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default Product","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader(){\r\n    return(\r\n        <Spinner animation=\"border\"\r\n                 role=\"status\"\r\n                style={{\r\n                    height: '100px',\r\n                    width: '100px',\r\n                    margin: 'auto',\r\n                    display: 'block'\r\n                }}>\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nfunction Message({ variant, children }){\r\n    return(\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin=false}){\r\n\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    console.log('KEYWORD:', keyword)\r\n\r\n    return(\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {\r\n                    [...Array(pages).keys()].map((x) => (\r\n                        <LinkContainer\r\n                            key={x + 1}\r\n                        to={!isAdmin ?\r\n                            `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                        }\r\n                        >\r\n                            <Pagination.Item active={x + 1 === page}>\r\n                                {x + 1}\r\n                            </Pagination.Item>\r\n\r\n                        </LinkContainer>\r\n                    ))\r\n                }\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\nexport const PRODUCT_TOP_RESET = 'PRODUCT_TOP_RESET'","import {PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_SUCCESS,\r\n        PRODUCT_LIST_FAIL,\r\n\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS,\r\n        PRODUCT_DETAILS_FAIL,\r\n\r\n        PRODUCT_DELETE_REQUEST,\r\n        PRODUCT_DELETE_SUCCESS,\r\n        PRODUCT_DELETE_FAIL,\r\n\r\n        PRODUCT_CREATE_REQUEST,\r\n        PRODUCT_CREATE_SUCCESS,\r\n        PRODUCT_CREATE_FAIL,\r\n\r\n        PRODUCT_UPDATE_REQUEST,\r\n        PRODUCT_UPDATE_SUCCESS,\r\n        PRODUCT_UPDATE_FAIL,\r\n\r\n        PRODUCT_CREATE_REVIEW_REQUEST,\r\n        PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n        PRODUCT_TOP_REQUEST,\r\n        PRODUCT_TOP_SUCCESS,\r\n        PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\nimport {ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS} from \"../constants/orderConstants\";\r\n\r\nexport const listProducts  = (keyword = '') => async (dispatch)  => {\r\n    try{\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const { data } = await axios.get(`/products/${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts  = () => async (dispatch)  => {\r\n    try{\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const { data } = await axios.get(`/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails  = (id) => async (dispatch)  => {\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/products/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport { Column } from '@ant-design/charts';\r\n\r\nfunction DemoColumn({orderItems}) {\r\n\r\n    const data = []\r\n    orderItems && Object.entries(orderItems).forEach(([key, value]) =>\r\n        data.push({\r\n            type: key,\r\n            sales: value\r\n        }))\r\n    const config = {\r\n        data: data,\r\n        xField: 'type',\r\n        yField: 'sales',\r\n        columnWidthRatio: 0.8,\r\n        meta: {\r\n            type: { alias: \"type\" },\r\n            sales: { alias: \"sales\" },\r\n        },\r\n    };\r\n    return (\r\n        <div style={{width: \"100%\"}}>\r\n            <Column {...config} />\r\n            <h6 style={{textAlign: \"center\", marginTop: \"3%\"}}>Most popular ordered products</h6>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default DemoColumn","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './loader';\r\nimport Message from './message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n            : error\r\n                ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Carousel pause='hover' className='bg-dark'>\r\n                        {products.map(product => (\r\n                            <Carousel.Item key={product._id}>\r\n                                <Link to={`/product/${product._id}`}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                    <Carousel.Caption className='carousel.caption'>\r\n                                        <h4>{product.name} ({product.price}₴)</h4>\r\n                                    </Carousel.Caption>\r\n                                </Link>\r\n                            </Carousel.Item>\r\n                        ))}\r\n                    </Carousel>\r\n                )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","import axios from \"axios\";\r\nimport{\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from \"../constants/orderConstants\";\r\n\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders/myorders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Product from \"../components/product\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport Paginate from \"../components/paginate\";\r\nimport {listProducts} from \"../actions/productActions\";\r\nimport DemoPie from \"../components/pieChart\";\r\nimport DemoColumn from \"../components/columnChart\";\r\nimport ProductCarousel from \"../components/productCarousel\";\r\nimport {listOrders} from \"../actions/orderActions\";\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading: loadingOrders,  error: errorOrders, orders } = orderList\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n\r\n        dispatch(listProducts(keyword))\r\n        dispatch(listOrders())\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    let categories = products?.reduce((acc, product) =>\r\n            ({ ...acc, [product.category]: (acc[product.category] || 0) + 1 }),\r\n        {});\r\n\r\n    let orderItems = orders?.reduce((acc, order) => {\r\n        order.orderItems?.forEach(orderItem => (acc[orderItem.name] = (acc[orderItem.name] || 0) + 1))\r\n        return acc\r\n    }, {})\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product}/>\r\n                                </Col>\r\n                            )\r\n                        )}\r\n                    </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword}/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HomeScreen","import React, {useEffect, useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form} from \"react-bootstrap\";\r\nimport Rating from \"../components/rating\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport { listProductDetails, createProductReview } from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductScreen({ match, history }){\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Link to=\"/\" className=\"btn btn-light my-3\">Go Back</Link>\r\n\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid/>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#f8e825\"}/>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Price: {product.price}₴\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Description: {product.description}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price:</Col>\r\n                                                <Col>\r\n                                                    <strong>{product.price}₴</strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Status:</Col>\r\n                                                <Col>\r\n                                                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Qty</Col>\r\n                                                    <Col xs='auto' className='my-1'>\r\n                                                        <Form.Control\r\n                                                        as='select'\r\n                                                        value={qty}\r\n                                                        onChange = {(e) => setQty(e.target.value)}\r\n                                                        >\r\n                                                            {\r\n                                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className=\"btn-block\"\r\n                                                    type=\"button\"\r\n                                                    disabled={product.countInStock === 0}>Add to cart</Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h4>Reviews</h4>\r\n                                {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                <ListGroup variant='flush'>\r\n                                    {product.reviews.map((review) => (\r\n                                        <ListGroup.Item key={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} color='#f8e825' />\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <h4>Write a review</h4>\r\n\r\n                                        {loadingProductReview && <Loader />}\r\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                        {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={rating}\r\n                                                        onChange={(e) => setRating(e.target.value)}\r\n                                                    >\r\n                                                        <option value=''>Select...</option>\r\n                                                        <option value='1'>1 - Poor</option>\r\n                                                        <option value='2'>2 - Fair</option>\r\n                                                        <option value='3'>3 - Good</option>\r\n                                                        <option value='4'>4 - Very Good</option>\r\n                                                        <option value='5'>5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label>Review</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        row='5'\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                        />\r\n                                                </Form.Group>\r\n\r\n                                                <Button\r\n                                                    disabled={loadingProductReview}\r\n                                                    type='submit'\r\n                                                    variant='primary'\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n\r\n                                            </Form>\r\n                                        ) : (\r\n                                            <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen","import axios from \"axios\";\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty: qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from \"react-bootstrap\";\r\nimport Message from \"../components/message\"\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\n\r\nfunction CartScreen({ match, location, history }){\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return(\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                { cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go back</Link>\r\n                    </Message>\r\n                ) :\r\n                <ListGroup variant='flush'>\r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>\r\n                                        {item.name}\r\n                                    </Link>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    {item.price}₴\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Form.Control\r\n                                        as='select'\r\n                                        value={item.qty}\r\n                                        onChange = {(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                    >\r\n                                        {\r\n                                            [...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))\r\n                                        }\r\n\r\n                                    </Form.Control>\r\n                                </Col>\r\n\r\n                                <Col md={1}>\r\n                                    <Button\r\n                                        type='button'\r\n                                        variant='light'\r\n                                        onClick={() => removeFromCartHandler(item.product)}\r\n                                    >\r\n                                        <i className='fas fa-trash'/>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n\r\n                    ))}\r\n                </ListGroup>\r\n                }\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}₴\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nfunction LoginScreen({location, history}){\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                    Register\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nfunction RegisterScreen({location, history}){\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account? <Link\r\n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                    Sign In\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport {getUserDetails, register, updateUserProfile} from \"../actions/userActions\";\r\nimport {userUpdateProfileReducer} from \"../reducers/userReducers\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id ){\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User profile</h2>\r\n\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    {loading && <Loader />}\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type='email'\r\n                                placeholder='Enter Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Enter Password'\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Confirm Password'\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th/>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}₴</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                                )\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nfunction UserListScreen({ history }){\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading,  error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.is_admin){\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this user?')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.is_admin ? (\r\n                                        <i className='fas fa-check' style={{color: 'green'}}/>\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}</td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'/>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                            <i className='fas fa-trash'/>\r\n                                        </Button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nfunction UserEditScreen({match, history}){\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [is_admin, setIs_Admin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIs_Admin(user.is_admin)\r\n            }\r\n        }\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id: user._id, name, email, is_admin}))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    checked={is_admin}\r\n                                    label='Is Admin'\r\n                                    onChange={(e) => setIs_Admin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default UserEditScreen","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nfunction ShippingScreen({ history }){\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\n\r\nfunction PaymentScreen({ history }){\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('С.O.D.')\r\n\r\n    if(!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return(\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form as='legend'>Select Method</Form>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='C.O.D. or Credit Card'\r\n                            id='C.O.D.'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }){\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch()\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n\r\n    cart.totalPrice =  cart.itemsPrice\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {'   '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'   '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order items</h2>\r\n                            {cart.cartItems.length === 0 ? (<Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> ): (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x {item.price}₴ = {(item.qty * item.price).toFixed(2)}₴\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                        ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Items:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {cart.itemsPrice}₴\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>{cart.totalPrice}₴</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport { getOrderDetails, deliverOrder } from \"../actions/orderActions\";\r\nimport { ORDER_DELIVER_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({ match, history }){\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n        if(!order || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        }\r\n\r\n    }, [dispatch,  order, orderId, successDeliver])\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return  loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) :\r\n        (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {'   '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'   '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered at {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order items</h2>\r\n                            {order.orderItems.length === 0 ? (<Message variant='info'>\r\n                                Order is empty\r\n                            </Message> ): (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x {item.price}₴ = {(item.qty * item.price).toFixed(2)}₴\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Items:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {order.itemsPrice}₴\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>{order.totalPrice}₴</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.is_admin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                type='button'\r\n                                className='btn btn-block'\r\n                                onClick={deliverHandler}\r\n                                >\r\n                                    Mark As Deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","import React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\n\r\nexport const ExportReact = ({dataSet}) => {\r\n    return (\r\n        <ExcelFile element={<Button variant=\"warning\">Export</Button>}>\r\n            <ExcelSheet data={dataSet} name=\"Products\">\r\n                <ExcelColumn label=\"_id\" value=\"_id\"/>\r\n                <ExcelColumn label=\"name\" value=\"name\"/>\r\n                <ExcelColumn label=\"price\" value=\"price\"/>\r\n                <ExcelColumn label=\"description\" value=\"description\"/>\r\n                <ExcelColumn label=\"category\" value=\"category\"/>\r\n                <ExcelColumn label=\"brand\" value=\"brand\"/>\r\n            </ExcelSheet>\r\n        </ExcelFile>\r\n    )\r\n}","import React from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport {deleteProduct} from \"../actions/productActions\";\r\n\r\nfunction ProductTable({products}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this product?')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {products.map(product => (\r\n                <tr key={product._id}>\r\n                    <td>{product._id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.price}₴</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.brand}</td>\r\n\r\n                    <td>\r\n                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                            <Button variant='light' className='btn-sm'>\r\n                                <i className='fas fa-edit'/>\r\n                            </Button>\r\n                        </LinkContainer>\r\n\r\n                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                            <i className='fas fa-trash'/>\r\n                        </Button>\r\n                    </td>\r\n\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default ProductTable","import React, { Component } from 'react';\r\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\r\n\r\nclass ExcelReader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rows: [],\r\n            cols: [],\r\n        }\r\n    }\r\n\r\n    fileHandler = (event) => {\r\n        let fileObj = event.target.files[0];\r\n\r\n        //just pass the fileObj as parameter\r\n        ExcelRenderer(fileObj, (err, resp) => {\r\n            if(err){\r\n                console.log(err);\r\n            }\r\n            else{\r\n                this.setState({\r\n                    cols: resp.cols,\r\n                    rows: resp.rows\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.fileHandler.bind(this)} style={{\"padding\":\"10px\"}} />\r\n                <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExcelReader;","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport Paginate from \"../components/paginate\";\r\nimport { listProducts, deleteProduct, createProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nimport { ExportReact } from \"../components/exportExcelFile\";\r\nimport ProductTable from \"../components/productTable\";\r\nimport ExcelReader from \"../components/importExcelFile\";\r\n\r\nfunction ProductListScreen({ history, match }){\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading,  error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete,  error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate,  error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if(!userInfo.is_admin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const data = []\r\n\r\n    products.forEach(product => {\r\n        const obj = {\r\n            _id: product._id,\r\n            name: product.name,\r\n            price: product.price,\r\n            description: product.description,\r\n            category: product.category,\r\n            brand: product.brand\r\n        }\r\n        data.push(obj)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'/> Create Product\r\n                    </Button>\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                        <ProductTable products={products}/>\r\n                            <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                            <Col className='text-left'>\r\n                                <ExportReact dataSet={data} />\r\n                            </Col>\r\n                                <ExcelReader />\r\n\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductEditScreen({match, history}){\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if(!product.name || product._id !== Number(productId)){\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n\r\n    }, [product, productId, dispatch, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try{\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/products/upload/', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch(error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(Number(e.target.value))}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n                                </Form.File>\r\n                                {uploading && <Loader/> }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(Number(e.target.value))}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\nfunction OrderListScreen({ history }){\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading,  error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.is_admin){\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL PRICE</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user && order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}₴</td>\r\n                                    <td>{order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}\r\n                                    </td>\r\n\r\n                                    <td>{order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderListScreen","import React from \"react\";\r\nimport {HashRouter as Router, Route} from \"react-router-dom\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\nimport HomeScreen from \"./screens/homeScreen\";\r\nimport ProductScreen from \"./screens/productScreen\";\r\nimport CartScreen from \"./screens/cartScreen\";\r\nimport LoginScreen from \"./screens/loginScreen\";\r\nimport RegisterScreen from \"./screens/registerScreen\";\r\nimport ProfileScreen from \"./screens/profileScreen\";\r\nimport UserListScreen from \"./screens/userListScreen\";\r\nimport UserEditScreen from \"./screens/userEditScreen\";\r\nimport ShippingScreen from \"./screens/shippingScreen\";\r\nimport PaymentScreen from \"./screens/paymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/placeOrderScreen\";\r\nimport OrderScreen from \"./screens/orderScreen\";\r\nimport ProductListScreen from \"./screens/productListScreen\";\r\nimport ProductEditScreen from \"./screens/productEditScreen\";\r\nimport OrderListScreen from \"./screens/orderListScreen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <Header/>\r\n        <main className=\"py-3\">\r\n            <Container>\r\n                <Route path=\"/\" component={HomeScreen} exact/>\r\n                <Route path=\"/login\" component={LoginScreen}/>\r\n                <Route path=\"/register\" component={RegisterScreen}/>\r\n                <Route path=\"/profile\" component={ProfileScreen}/>\r\n                <Route path=\"/shipping\" component={ShippingScreen}/>\r\n                <Route path=\"/payment\" component={PaymentScreen}/>\r\n                <Route path=\"/placeorder\" component={PlaceOrderScreen}/>\r\n                <Route path=\"/order/:id\" component={OrderScreen}/>\r\n                <Route path=\"/product/:id\" component={ProductScreen}/>\r\n                <Route path=\"/cart/:id?\" component={CartScreen}/>\r\n\r\n                <Route path=\"/admin/userlist\" component={UserListScreen}/>\r\n                <Route path=\"/admin/user/:id/edit\" component={UserEditScreen}/>\r\n\r\n                <Route path=\"/admin/productlist\" component={ProductListScreen}/>\r\n                <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen}/>\r\n\r\n                <Route path=\"/admin/orderlist\" component={OrderListScreen}/>\r\n            </Container>\r\n        </main>\r\n        <Footer/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n                            JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n                            JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n            composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_SUCCESS,\r\n        PRODUCT_LIST_FAIL,\r\n\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS,\r\n        PRODUCT_DETAILS_FAIL,\r\n\r\n        PRODUCT_DELETE_REQUEST,\r\n        PRODUCT_DELETE_SUCCESS,\r\n        PRODUCT_DELETE_FAIL,\r\n\r\n        PRODUCT_CREATE_REQUEST,\r\n        PRODUCT_CREATE_SUCCESS,\r\n        PRODUCT_CREATE_FAIL,\r\n        PRODUCT_CREATE_RESET,\r\n\r\n        PRODUCT_UPDATE_REQUEST,\r\n        PRODUCT_UPDATE_SUCCESS,\r\n        PRODUCT_UPDATE_FAIL,\r\n        PRODUCT_UPDATE_RESET,\r\n\r\n        PRODUCT_CREATE_REVIEW_REQUEST,\r\n        PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        PRODUCT_CREATE_REVIEW_FAIL,\r\n        PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n        PRODUCT_TOP_REQUEST,\r\n        PRODUCT_TOP_SUCCESS,\r\n        PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages,\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews: []} }, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = {product: {}}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case CART_CLEAR_ITEMS:\r\n            return{\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from \"../constants/userConstants\";\r\n\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {user: { } }, action) => {\r\n    switch (action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true,  userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = {users: [] }, action) => {\r\n    switch (action.type){\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false,  users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return {users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false,  success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user: {}}, action) => {\r\n    switch (action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false,  success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import{\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state={}, action) => {\r\n    switch (action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = {orders: []}, action) => {\r\n    switch (action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = {orders: []}, action) => {\r\n    switch (action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}